language: cpp
os: linux
dist: trusty
cache:
    directories:
        - '${TRAVIS_BUILD_DIR}/deps'
services:
    - docker
env:
    global:
        secure: eAP3LhNMcYTo6HICr1lqgXA7VD+Br4U1S/wNBjQ4/kSpv/vV3Dfl9vDTAtQNwf0G9RQ9oUGd9QyPEncFc7DeQTx3Xnsa811tpGG2o9pJa545TzOKv1ZSvzH/kob+aVhi0saLF9KDS7+Xv8Ys4N1xXzPFSGO4ujeEPRvPB28dzNDJomI8Dqpw43TaZ8sMfY9GClrdOOnRafM7dpW+FqkBp+IDvFB6zCywlbV4sNEDVngGUQNlPJpalR15U8HMkCho1ZtEERneHkspjMftHwoytK4V+/TL+YuyEjxDoqDm34ekE9sYmTyaLH9SPm8TqYi/Gp8nt6+wA1r2k83bidyyEOYnTOUgagU5weufQiTClsQcK8VQ1yORwsp/XZSyR0/KuzZRqTONARQGBOuRNG+XmUSkCk600NLfL629bWNaX2AiXzaP0kgLETueynboGSqRgvOKtDEBACGfC2dxp4RJK7RQ3ll8sDjt3W1EF+55rl1mMydQ6cKAMMVf6Kr4GD1aukdtz5WamMdyIljezjgmmKrt81eGW4KJzDtPGW/EXueiH1xo0NAGH0Jd4DTooTpmGJOW1Dj9DvFxVbgxzV2wRaI8XdN5Z+04fSSZd9EzNfb+5slxPaV+bnGljMMbuMdmx4bx8BaM+WjWWsuYR61HuyPDbXPTd+y0LwGBfZSg9gA=
matrix:
    include:
        -
            stage: Build
            dist: xenial
            name: Dragonboard
            env: "BUILD_TYPE=dragonboard\nDOCKER=danielguramulta/aditof-sdk-debian"
        -
            dist: xenial
            name: Raspberrypi3
            env: "BUILD_TYPE=raspberrypi3\nDOCKER=danielguramulta/aditof-sdk-raspbian"
        -
            dist: xenial
            name: 'Xenial kinetic'
            env: "CMAKE_OPTIONS=\"-DWITH_EXAMPLES=off -DWITH_ROS=on\"\nROS_PARALLEL_JOBS='-j8 -l6'\nROS_DISTRO=kinetic"
        -
            dist: bionic
            name: 'Bionic melodic'
            env: "CMAKE_OPTIONS=\"-DWITH_EXAMPLES=off -DWITH_ROS=on\"\nROS_PARALLEL_JOBS='-j8 -l6'\nROS_DISTRO=melodic"
            addons: {apt: {packages: [python-catkin-pkg, ros-$ROS_DISTRO-ros-base, ros-$ROS_DISTRO-rviz]}}
        -
            stage: 'Code Quality'
            env: BUILD_TYPE=clang_format
            addons: {apt: {packages: [clang-format-6.0, cmake], sources: [ubuntu-toolchain-r-test, llvm-toolchain-trusty-6.0]}}
        -
            dist: xenial
            env: BUILD_TYPE=cppcheck
            addons: {apt: {packages: [cppcheck, cmake]}}
        -
            stage: 'Deploy Documentation'
            dist: xenial
            env: BUILD_TYPE=deploy_doxygen
            addons: {apt: {packages: [cmake, graphviz]}}
before_install:
    - "if [[ -z \"${ROS_DISTRO}\" ]]; then\n  sudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu ${TRAVIS_DIST} main\" > /etc/apt/sources.list.d/ros-latest.list'\n  sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n  if [ \"{$ROS_DISTRO}\"  = \"melodic\" ] ; then sudo apt update -qq ; else sudo apt-get update -qq  fi\n  source /opt/ros/${ROS_DISTRO}/setup.bash\n  sudo rosdep init\n  rosdep update\nfi\n"
install:
    - 'if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi'
    - '${CXX} --version'
    - 'export DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"'
    - 'mkdir -p ${DEPS_DIR}'
    - 'if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig:$PKG_CONFIG_PATH"; fi'
    - ./ci/travis/deps.sh
    - 'export PYTHON=$(python-config --prefix)/bin/python3'
before_script:
    - 'git config --global user.name "Travis Bot"'
    - 'git config --global user.email "<>"'
    - 'if [[ "$CMAKE_OPTIONS" == "" ]]; then export CMAKE_OPTIONS="-DWITH_EXAMPLES=off"; fi'
    - "if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then\n  export CMAKE_OPTIONS=\"-DOPENSSL_INCLUDE_DIRS=`pkg-config --variable=includedir openssl` $CMAKE_OPTIONS\"\nfi\n"
    - "if [[ \"$BUILD_TYPE\" == \"\" ]]; then\n  pushd \"${TRAVIS_BUILD_DIR}\"\n  mkdir build && cd build && cmake .. ${CMAKE_OPTIONS} -DPYTHON_EXECUTABLE=${PYTHON} -DCMAKE_PREFIX_PATH=\"${DEPS_DIR}/installed/glog;${DEPS_DIR}/installed/protobuf;${DEPS_DIR}/installed/websockets;${DEPS_DIR}/installed/opencv;\";\n  popd\nfi\n"
script:
    - ./ci/travis/run_build.sh
